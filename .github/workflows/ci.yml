name: CI
on:
  push:
    branches:
    - main
  pull_request:
  schedule:
    # run this every Wednesday at 3 am UTC
  - cron: 0 3 * * 3
  workflow_dispatch:

concurrency:
  # auto-cancel any in-progress job *on the same branch*
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:

  build-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        enable-cache: true
        prune-cache: false
    - name: Check build
      run: |
        uv sync --only-dev
        uv build

  unit-tests:
    name: ${{matrix.os}} x py${{matrix.python-version}} ${{matrix.marker}}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - '3.11'
        - '3.12'
        - '3.13'
        - '3.14'
        marker: [''] # needed to avoid collision with PY_LIB job

        include:
        - os: macos-latest
          python-version: '3.14'

        - os: windows-latest
          python-version: '3.14'

        - marker: PY_LIB
          os: ubuntu-latest
          python-version: '3.14'

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false

    - run: uv sync --group covcheck --no-install-project
    - if: ${{ matrix.marker != 'PY_LIB' }}
      # using editable mode for simplicity regarding coverage analysis
      run: uv pip install --editable . --no-deps
    - if: ${{ matrix.marker == 'PY_LIB' }}
      # disabling caching here to avoid shadowing the pure Python module
      # with a remnant .so from a previous run
      run: uv pip install --editable . --no-deps -Csetup-args='-Dpylib=true' --no-cache
    - name: Test
      run: uv run --no-sync coverage run --parallel-mode -m pytest --color=yes

    - name: Upload coverage data
      # only using reports from ubuntu because
      # combining reports from multiple platforms is tricky (or impossible ?)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
      with:
        name: gpgi_coverage_data-${{matrix.os}}-${{matrix.python-version}}-${{matrix.marker}}
        path: .coverage.*
        if-no-files-found: ignore
        include-hidden-files: true

  minimal-env:
    name: Minimal requirements
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        # setup-uv doesn't have this exact version of Python
        python-version: 3.11.0
    - name: Configure uv
      run: |
        echo "UV_PYTHON_PREFERENCE=only-system" >> $GITHUB_ENV
        echo "UV_RESOLUTION=lowest-direct" >> $GITHUB_ENV
    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        enable-cache: true
        prune-cache: false
    - run: |
        uv sync --only-dev
        uv sync --no-editable --group test
    - name: Test
      run: uv run --no-sync pytest --color=yes

  image-tests:
    name: Image tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        python-version: '3.14'

    - run: |
        uv sync --only-dev
        uv sync --no-editable --group test-image --group covcheck
    - name: Run Image Tests
      run: |
        uv run --no-sync coverage run --parallel-mode -m \
          pytest --color=yes --mpl -m mpl_image_compare \
                --mpl-generate-summary=html \
                --mpl-results-path=gpgi_pytest_mpl_results \
                --mpl-baseline-path=tests/pytest_mpl_baseline

    - name: Generate new image baseline
      if: failure()
      run: |
        uv run --no-sync \
          pytest --color=yes --mpl -m mpl_image_compare \
                --mpl-generate-path=gpgi_pytest_mpl_new_baseline \
                --last-failed

    # always attempt to upload artifacts, even
    # (and especially) in case of failure.
    - name: Upload pytest-mpl report
      if: always()
      uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
      with:
        name: gpgi_pytest_mpl_results
        path: gpgi_pytest_mpl_results/*

    - name: Upload pytest-mpl baseline
      if: always()
      uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
      with:
        name: gpgi_pytest_mpl_new_baseline
        path: gpgi_pytest_mpl_new_baseline/*
        if-no-files-found: ignore

    - name: Upload coverage data
      uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
      with:
        name: gpgi_coverage_data-image-tests
        path: .coverage.*
        if-no-files-found: ignore
        include-hidden-files: true

  concurrency-tests:
    name: Thread concurrency tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        python-version: '3.13'
        enable-cache: true
        prune-cache: false
    - run: |
        uv sync --only-dev
        uv sync --no-editable --group concurrency
    - name: Run Concurrency Tests
      run: |
        uv run --no-sync \
          pytest --color=yes --count 500 tests/test_concurrent.py

  coverage:
    name: Combine & check coverage.
    runs-on: ubuntu-latest
    needs:
    - unit-tests
    - image-tests

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        python-version: '3.13'
        enable-cache: true
        prune-cache: false

    - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
      with:
        pattern: gpgi_coverage_data-*
        merge-multiple: true

    - name: Check coverage
      run: |
        uv tool install coverage
        coverage combine
        coverage html --skip-covered --skip-empty
        coverage report --skip-covered --format=markdown >> "$GITHUB_STEP_SUMMARY"
        coverage report --fail-under=100

    - name: Upload HTML report if check failed.
      uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
      with:
        name: gpgi_coverage_report
        path: htmlcov
      if: ${{ failure() }}


  typecheck:
    strategy:
      matrix:
        python-version:
        - '3.11'
        - '3.12'
        - '3.13'
    runs-on: ubuntu-latest
    name: type check

    steps:
    - name: Checkout repo
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        prune-cache: false

    - run: |
        uv sync --only-dev
        uv sync --group typecheck
    - name: Typecheck (mypy)
      run: uv run --no-sync mypy src

    - name: Typecheck (pyright)
      run: uv run --no-sync pyright src

  future:
    name: py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        python-version:
        - '3.14'
        - 3.14t

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false
    - uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
      with:
        python-version: ${{ matrix.python-version }}
        # can't cache numpy nightlies as the name of the artifact
        # stays the same for a while
        enable-cache: false
    - name: Configure uv
      run: |
        echo "UV_PRERELEASE=allow" >> $GITHUB_ENV
        echo "UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple" >> $GITHUB_ENV
        echo "UV_INDEX_STRATEGY=unsafe-best-match" >> $GITHUB_ENV
    - name: Set PYTHON_GIL
      if: ${{ endswith( matrix.python-version , 't' ) }}
      run: |
        echo "PYTHON_GIL=0" >> $GITHUB_ENV
    - name: Build
      run: |
        uv lock --upgrade --no-build
        uv sync --only-dev

    - name: Unit Tests
      run: |
        uv sync --no-editable --group test
        uv run --no-sync pytest --color=yes

    - name: Concurrency tests
      run: |
        uv sync --no-editable --group concurrency
        uv run --no-sync \
          pytest --color=yes --count 500 tests/test_concurrent.py


  create-issue:
    if: ${{ failure() && github.event_name == 'schedule' }}
    needs: [future]
    permissions:
      issues: write
    runs-on: ubuntu-latest
    name: Create issue on failure

    steps:
    - name: Create issue on failure
      uses: imjohnbo/issue-bot@572eed14422c4d6ca37e870f97e7da209422f5bd # v3.4.4
      with:
        title: 'TST: Upcoming dependency test failures'
        body: |
          The weekly build with future Python, Cython and numpy
          has failed. Check the logs for any updates that need to be
          made in gpgi.
          https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

        pinned: false
        close-previous: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
